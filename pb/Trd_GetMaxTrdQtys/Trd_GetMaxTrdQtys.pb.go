// Code generated by protoc-gen-go. DO NOT EDIT.
// source: Trd_GetMaxTrdQtys.proto

package Trd_GetMaxTrdQtys

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type C2S struct {
	Header    *TrdHeader `protobuf:"bytes,1,req,name=header" json:"header,omitempty"`
	OrderType *int32     `protobuf:"varint,2,req,name=orderType" json:"orderType,omitempty"`
	Code      *string    `protobuf:"bytes,3,req,name=code" json:"code,omitempty"`
	Price     *float64   `protobuf:"fixed64,4,req,name=price" json:"price,omitempty"`
	OrderID   *uint64    `protobuf:"varint,5,opt,name=orderID" json:"orderID,omitempty"`
	//为保证与下单的价格同步，也提供调整价格选项，以下2个为调整价格使用，对港、A股有意义，因为港股有价位，A股2位精度，美股可不传
	AdjustPrice          *bool    `protobuf:"varint,6,opt,name=adjustPrice" json:"adjustPrice,omitempty"`
	AdjustSideAndLimit   *float64 `protobuf:"fixed64,7,opt,name=adjustSideAndLimit" json:"adjustSideAndLimit,omitempty"`
	SecMarket            *int32   `protobuf:"varint,8,opt,name=secMarket" json:"secMarket,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *C2S) Reset()         { *m = C2S{} }
func (m *C2S) String() string { return proto.CompactTextString(m) }
func (*C2S) ProtoMessage()    {}
func (*C2S) Descriptor() ([]byte, []int) {
	return fileDescriptor_5d384dfef84b04c8, []int{0}
}

func (m *C2S) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_C2S.Unmarshal(m, b)
}
func (m *C2S) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_C2S.Marshal(b, m, deterministic)
}
func (m *C2S) XXX_Merge(src proto.Message) {
	xxx_messageInfo_C2S.Merge(m, src)
}
func (m *C2S) XXX_Size() int {
	return xxx_messageInfo_C2S.Size(m)
}
func (m *C2S) XXX_DiscardUnknown() {
	xxx_messageInfo_C2S.DiscardUnknown(m)
}

var xxx_messageInfo_C2S proto.InternalMessageInfo

func (m *C2S) GetHeader() *TrdHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *C2S) GetOrderType() int32 {
	if m != nil && m.OrderType != nil {
		return *m.OrderType
	}
	return 0
}

func (m *C2S) GetCode() string {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return ""
}

func (m *C2S) GetPrice() float64 {
	if m != nil && m.Price != nil {
		return *m.Price
	}
	return 0
}

func (m *C2S) GetOrderID() uint64 {
	if m != nil && m.OrderID != nil {
		return *m.OrderID
	}
	return 0
}

func (m *C2S) GetAdjustPrice() bool {
	if m != nil && m.AdjustPrice != nil {
		return *m.AdjustPrice
	}
	return false
}

func (m *C2S) GetAdjustSideAndLimit() float64 {
	if m != nil && m.AdjustSideAndLimit != nil {
		return *m.AdjustSideAndLimit
	}
	return 0
}

func (m *C2S) GetSecMarket() int32 {
	if m != nil && m.SecMarket != nil {
		return *m.SecMarket
	}
	return 0
}

type S2C struct {
	Header               *TrdHeader  `protobuf:"bytes,1,req,name=header" json:"header,omitempty"`
	MaxTrdQtys           *MaxTrdQtys `protobuf:"bytes,2,opt,name=maxTrdQtys" json:"maxTrdQtys,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *S2C) Reset()         { *m = S2C{} }
func (m *S2C) String() string { return proto.CompactTextString(m) }
func (*S2C) ProtoMessage()    {}
func (*S2C) Descriptor() ([]byte, []int) {
	return fileDescriptor_5d384dfef84b04c8, []int{1}
}

func (m *S2C) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_S2C.Unmarshal(m, b)
}
func (m *S2C) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_S2C.Marshal(b, m, deterministic)
}
func (m *S2C) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2C.Merge(m, src)
}
func (m *S2C) XXX_Size() int {
	return xxx_messageInfo_S2C.Size(m)
}
func (m *S2C) XXX_DiscardUnknown() {
	xxx_messageInfo_S2C.DiscardUnknown(m)
}

var xxx_messageInfo_S2C proto.InternalMessageInfo

func (m *S2C) GetHeader() *TrdHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *S2C) GetMaxTrdQtys() *MaxTrdQtys {
	if m != nil {
		return m.MaxTrdQtys
	}
	return nil
}

type Request struct {
	C2S                  *C2S     `protobuf:"bytes,1,req,name=c2s" json:"c2s,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Request) Reset()         { *m = Request{} }
func (m *Request) String() string { return proto.CompactTextString(m) }
func (*Request) ProtoMessage()    {}
func (*Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_5d384dfef84b04c8, []int{2}
}

func (m *Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Request.Unmarshal(m, b)
}
func (m *Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Request.Marshal(b, m, deterministic)
}
func (m *Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Request.Merge(m, src)
}
func (m *Request) XXX_Size() int {
	return xxx_messageInfo_Request.Size(m)
}
func (m *Request) XXX_DiscardUnknown() {
	xxx_messageInfo_Request.DiscardUnknown(m)
}

var xxx_messageInfo_Request proto.InternalMessageInfo

func (m *Request) GetC2S() *C2S {
	if m != nil {
		return m.C2S
	}
	return nil
}

type Response struct {
	//以下3个字段每条协议都有，注释说明在InitConnect.proto中
	RetType              *int32   `protobuf:"varint,1,req,name=retType,def=-400" json:"retType,omitempty"`
	RetMsg               *string  `protobuf:"bytes,2,opt,name=retMsg" json:"retMsg,omitempty"`
	ErrCode              *int32   `protobuf:"varint,3,opt,name=errCode" json:"errCode,omitempty"`
	S2C                  *S2C     `protobuf:"bytes,4,opt,name=s2c" json:"s2c,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}
func (*Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_5d384dfef84b04c8, []int{3}
}

func (m *Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response.Unmarshal(m, b)
}
func (m *Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response.Marshal(b, m, deterministic)
}
func (m *Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response.Merge(m, src)
}
func (m *Response) XXX_Size() int {
	return xxx_messageInfo_Response.Size(m)
}
func (m *Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Response proto.InternalMessageInfo

const Default_Response_RetType int32 = -400

func (m *Response) GetRetType() int32 {
	if m != nil && m.RetType != nil {
		return *m.RetType
	}
	return Default_Response_RetType
}

func (m *Response) GetRetMsg() string {
	if m != nil && m.RetMsg != nil {
		return *m.RetMsg
	}
	return ""
}

func (m *Response) GetErrCode() int32 {
	if m != nil && m.ErrCode != nil {
		return *m.ErrCode
	}
	return 0
}

func (m *Response) GetS2C() *S2C {
	if m != nil {
		return m.S2C
	}
	return nil
}

func init() {
	proto.RegisterType((*C2S)(nil), "Trd_GetMaxTrdQtys.C2S")
	proto.RegisterType((*S2C)(nil), "Trd_GetMaxTrdQtys.S2C")
	proto.RegisterType((*Request)(nil), "Trd_GetMaxTrdQtys.Request")
	proto.RegisterType((*Response)(nil), "Trd_GetMaxTrdQtys.Response")
}

func init() { proto.RegisterFile("Trd_GetMaxTrdQtys.proto", fileDescriptor_5d384dfef84b04c8) }

var fileDescriptor_5d384dfef84b04c8 = []byte{
	// 360 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x51, 0xcf, 0xab, 0xd3, 0x40,
	0x18, 0x64, 0xf3, 0xa3, 0x69, 0xbf, 0x7a, 0xd0, 0x45, 0xeb, 0x52, 0x44, 0x96, 0x9c, 0xf6, 0xd2,
	0x52, 0x56, 0xf1, 0xe0, 0x4d, 0x22, 0xa8, 0x60, 0x41, 0x37, 0xb9, 0x4b, 0xc8, 0x7e, 0x68, 0xd4,
	0x34, 0x71, 0x77, 0x0b, 0xf6, 0x1f, 0xe8, 0xdf, 0xfd, 0xd8, 0xa4, 0x3f, 0x52, 0xde, 0xbb, 0xbc,
	0x5b, 0x66, 0xbe, 0x19, 0x32, 0x3b, 0x03, 0x2f, 0x0b, 0xa3, 0x7f, 0x7c, 0x42, 0xb7, 0x2d, 0xff,
	0x17, 0x46, 0x7f, 0x77, 0x07, 0xbb, 0xee, 0x4c, 0xeb, 0x5a, 0xfa, 0xec, 0xde, 0x61, 0xf9, 0x24,
	0x6b, 0x9b, 0xa6, 0xdd, 0x0d, 0x82, 0xe5, 0x53, 0x2f, 0x18, 0x33, 0xe9, 0x31, 0x80, 0x30, 0x93,
	0x39, 0x5d, 0xc1, 0xe4, 0x17, 0x96, 0x1a, 0x0d, 0x23, 0x3c, 0x10, 0x73, 0xf9, 0x62, 0x3d, 0x92,
	0x16, 0x46, 0x7f, 0xee, 0x8f, 0xea, 0x24, 0xa2, 0xaf, 0x60, 0xd6, 0x1a, 0x8d, 0xa6, 0x38, 0x74,
	0xc8, 0x02, 0x1e, 0x88, 0x58, 0x5d, 0x09, 0x4a, 0x21, 0xaa, 0x5a, 0x8d, 0x2c, 0xe4, 0x81, 0x98,
	0xa9, 0xfe, 0x9b, 0x3e, 0x87, 0xb8, 0x33, 0x75, 0x85, 0x2c, 0xe2, 0x81, 0x20, 0x6a, 0x00, 0x94,
	0x41, 0xd2, 0xdb, 0xbe, 0x7c, 0x64, 0x31, 0x27, 0x22, 0x52, 0x67, 0x48, 0x39, 0xcc, 0x4b, 0xfd,
	0x7b, 0x6f, 0xdd, 0xb7, 0xde, 0x35, 0xe1, 0x44, 0x4c, 0xd5, 0x98, 0xa2, 0x6b, 0xa0, 0x03, 0xcc,
	0x6b, 0x8d, 0x1f, 0x76, 0xfa, 0x6b, 0xdd, 0xd4, 0x8e, 0x25, 0x9c, 0x08, 0xa2, 0x1e, 0xb8, 0xf8,
	0xcc, 0x16, 0xab, 0x6d, 0x69, 0xfe, 0xa0, 0x63, 0x53, 0x4e, 0x7c, 0xe6, 0x0b, 0x91, 0xfe, 0x85,
	0x30, 0x97, 0xd9, 0x63, 0x7b, 0x78, 0x07, 0xd0, 0x5c, 0xca, 0x66, 0x01, 0x27, 0x62, 0x2e, 0x17,
	0x63, 0xcb, 0x75, 0x0a, 0x35, 0x52, 0xa6, 0x6f, 0x20, 0x51, 0xf8, 0x6f, 0x8f, 0xd6, 0x51, 0x01,
	0x61, 0x25, 0xed, 0xe9, 0x77, 0x83, 0xf7, 0x76, 0xdb, 0x4c, 0xe6, 0xca, 0x4b, 0xd2, 0x23, 0x81,
	0xa9, 0x42, 0xdb, 0xb5, 0x3b, 0x8b, 0xf4, 0x35, 0x24, 0x06, 0x5d, 0xdf, 0xbf, 0xb7, 0xc6, 0xef,
	0xa3, 0xd5, 0xdb, 0xcd, 0x46, 0x9d, 0x49, 0xba, 0x80, 0x89, 0x41, 0xb7, 0xb5, 0x3f, 0xfb, 0x54,
	0x33, 0x75, 0x42, 0xbe, 0x71, 0x34, 0x26, 0x1b, 0xe6, 0xf1, 0x1d, 0x9c, 0xa1, 0x0f, 0x62, 0x65,
	0xc5, 0xa2, 0xd1, 0x23, 0x6e, 0x83, 0xe4, 0x32, 0x53, 0x5e, 0x72, 0x17, 0x00, 0x00, 0xff, 0xff,
	0x6e, 0x23, 0x36, 0x15, 0x81, 0x02, 0x00, 0x00,
}
